[{"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\index.js":"1","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\App.js":"2","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\reportWebVitals.js":"3","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\Routes.js":"4","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\ErrorBoundary.jsx":"5","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\History.js":"6","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\PrivateRoute.jsx":"7","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\logIn\\LogIn.jsx":"8","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\dashboard\\dashboard.jsx":"9","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\adminDashboard\\AdminDashboard.jsx":"10","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\mentor\\Mentor.jsx":"11","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\appBar\\Appbar.jsx":"12","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\lazyLoading\\Loading.jsx":"13","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\student\\Student.jsx":"14","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\services\\admin_service.js":"15","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\userProfile\\userProfile.jsx":"16","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\sideNavBar\\SidenavBar.jsx":"17","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\course\\Course.jsx":"18","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\mainDashboard\\MainDashboard.jsx":"19","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\adminDashboardDetails\\AdminDashboardDetails.jsx":"20","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\services\\axios_service.js":"21","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\perticularCourceDetails\\PerticularCourceDetails.jsx":"22","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\MentorFormDialog\\MentorDialog.jsx":"23"},{"size":438,"mtime":1611732509503,"results":"24","hashOfConfig":"25"},{"size":263,"mtime":1611815007286,"results":"26","hashOfConfig":"25"},{"size":375,"mtime":1611732509504,"results":"27","hashOfConfig":"25"},{"size":1184,"mtime":1612337415541,"results":"28","hashOfConfig":"25"},{"size":613,"mtime":1611815007407,"results":"29","hashOfConfig":"25"},{"size":86,"mtime":1611732509499,"results":"30","hashOfConfig":"25"},{"size":299,"mtime":1611815007408,"results":"31","hashOfConfig":"25"},{"size":6540,"mtime":1612259874463,"results":"32","hashOfConfig":"25"},{"size":2869,"mtime":1612418739051,"results":"33","hashOfConfig":"25"},{"size":983,"mtime":1612337415543,"results":"34","hashOfConfig":"25"},{"size":5026,"mtime":1612418713375,"results":"35","hashOfConfig":"25"},{"size":2938,"mtime":1612418739045,"results":"36","hashOfConfig":"25"},{"size":273,"mtime":1612259874443,"results":"37","hashOfConfig":"25"},{"size":12621,"mtime":1612418739115,"results":"38","hashOfConfig":"25"},{"size":1206,"mtime":1612418739117,"results":"39","hashOfConfig":"25"},{"size":1198,"mtime":1612259490064,"results":"40","hashOfConfig":"25"},{"size":4152,"mtime":1612418739057,"results":"41","hashOfConfig":"25"},{"size":4083,"mtime":1612337415550,"results":"42","hashOfConfig":"25"},{"size":4969,"mtime":1612418739054,"results":"43","hashOfConfig":"25"},{"size":785,"mtime":1612337415546,"results":"44","hashOfConfig":"25"},{"size":1412,"mtime":1612337097887,"results":"45","hashOfConfig":"25"},{"size":4752,"mtime":1612418739056,"results":"46","hashOfConfig":"25"},{"size":2602,"mtime":1612259874404,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vvnql6",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\index.js",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\App.js",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\reportWebVitals.js",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\Routes.js",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\ErrorBoundary.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\History.js",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\PrivateRoute.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\logIn\\LogIn.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\dashboard\\dashboard.jsx",[],["98","99"],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\adminDashboard\\AdminDashboard.jsx",["100"],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\mentor\\Mentor.jsx",["101","102","103"],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\appBar\\Appbar.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\lazyLoading\\Loading.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\student\\Student.jsx",["104","105","106"],"import React, { useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport \"./student.scss\";\r\nimport UploadIcon from \"../../assets/student-upload-icon.png\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"USD\",\r\n    label: \"$\",\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"€\",\r\n  },\r\n  {\r\n    value: \"BTC\",\r\n    label: \"฿\",\r\n  },\r\n  {\r\n    value: \"JPY\",\r\n    label: \"¥\",\r\n  },\r\n];\r\nconst mentors = [\r\n  {\r\n    value: \"USD\",\r\n    label: \"mentor1\",\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"mentor2\",\r\n  },\r\n  {\r\n    value: \"BTC\",\r\n    label: \"mentor3\",\r\n  },\r\n  {\r\n    value: \"JPY\",\r\n    label: \"mentor4\",\r\n  },\r\n];\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(\r\n  Student_ID,\r\n  Name,\r\n  Email_ID,\r\n  Mobile_No,\r\n  Course,\r\n  Mentor,\r\n  Current_score\r\n) {\r\n  return {\r\n    Student_ID,\r\n    Name,\r\n    Email_ID,\r\n    Mobile_No,\r\n    Course,\r\n    Mentor,\r\n    Current_score,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nclass Student extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openDialog: false,\r\n      menu1: \"Java Full Stack\",\r\n      menu2: \"Mentor1\",\r\n      openUploadDialog: false,\r\n    };\r\n  }\r\n  \r\n  handleChangemenu1 = (event) => {\r\n    this.setState({ menu1: event.target.value });\r\n  };\r\n  handleChangemenu2 = (event) => {\r\n    this.setState({ menu2: event.target.value });\r\n  };\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      openDialog: true,\r\n    });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({\r\n      openDialog: false,\r\n    });\r\n  };\r\n  handleClickOpenUpload = () => {\r\n    this.setState({\r\n      openUploadDialog: true,\r\n    });\r\n  };\r\n  handleCloseUpload = () => {\r\n    this.setState({\r\n      openUploadDialog: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"student-outer-container\">\r\n        <StylesProvider>\r\n          <Dialog\r\n            open={this.state.openDialog}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <div className=\"box-top-header\">Add Student</div>\r\n            <div className=\"box-content\">\r\n              {\" \"}\r\n              <form noValidate autoComplete=\"off\">\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Student id\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Email id\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Mobile Number\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  {\" \"}\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-select-currency-native\"\r\n                    select\r\n                    label=\"Course\"\r\n                    value={this.state.menu1}\r\n                    size=\"small\"\r\n                    onChange={(e) => this.handleChangemenu1(e)}\r\n                    SelectProps={{\r\n                      native: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {currencies.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </TextField>\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  {\" \"}\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-select-currency-native\"\r\n                    select\r\n                    label=\"Mentor\"\r\n                    value={this.state.menu2}\r\n                    size=\"small\"\r\n                    onChange={(e) => this.handleChangemenu2(e)}\r\n                    SelectProps={{\r\n                      native: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {mentors.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </TextField>\r\n                </div>\r\n                <div className=\"student-buttton-container\">\r\n                  <div\r\n                    className=\"student-form-cancel-button\"\r\n                    onClick={this.handleClose}\r\n                  >\r\n                    Cancel\r\n                  </div>\r\n                  <div className=\"student-form-add-button\">Add</div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Dialog>\r\n          <Dialog\r\n            open={this.state.openUploadDialog}\r\n            onClose={this.handleCloseUpload}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <div className=\"outer-box-upload\">\r\n              <div className=\"upload-header-container\">\r\n                <div className=\"upload-box-header\">Upload Engineers Data</div>\r\n                <CloseIcon\r\n                  onClick={this.handleCloseUpload}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n              </div>\r\n              <div className=\"inner-upload-container\">\r\n                <div>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"span\"\r\n                    >\r\n                      <CloudUploadIcon />\r\n                      Upload\r\n                    </Button>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Dialog>\r\n          <div className=\"header-student\">\r\n            <div className=\"header-student-text\">Student Details</div>\r\n            <div className=\"student-upload-button-container\">\r\n              <div\r\n                className=\"icon-image-container\"\r\n                onClick={this.handleClickOpenUpload}\r\n              >\r\n                <img className=\"icon-image\" src={UploadIcon} alt=\"\" />\r\n              </div>\r\n              <div\r\n                className=\"add-student-button\"\r\n                onClick={this.handleClickOpen}\r\n              >\r\n                Add Student\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <TableContainer component={Paper}>\r\n              <Table className=\"njn\" aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell>Student ID</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Name</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Email ID</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Mobile No.</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Course</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Mentor</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      Current Score\r\n                    </StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.props.allCource &&\r\n                    this.props.allCource.map((row) => (\r\n                      <StyledTableRow key={row.name}>\r\n                        <StyledTableCell component=\"th\" scope=\"row\">\r\n                          {row.sId}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                          {row.Name}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                          {row.email}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                          {row.mobileNo}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                          {row.Course}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                          {row.assignMentorsId}\r\n                        </StyledTableCell>\r\n                        <StyledTableCell align=\"right\">\r\n                          {row.assignCourcesId}\r\n                        </StyledTableCell>\r\n                      </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </StylesProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Student;\r\n","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\services\\admin_service.js",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\userProfile\\userProfile.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\sideNavBar\\SidenavBar.jsx",["107"],"import React, { Component } from \"react\";\r\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { Laptop as LaptopIcon, School as SchoolIcon } from \"@material-ui/icons\";\r\nimport mentor_icon from \"../../assets/icon/Mentor.png\";\r\nimport cource_icon from \"../../assets/icon/Course.png\";\r\nimport clsx from \"clsx\";\r\nimport history from \"../../History.js\";\r\nimport \"./sideNavBar.scss\";\r\nclass SidenavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  navigate = (e, menu) => {\r\n    this.props.setSelectedMenu(menu);\r\n    if (menu !== \"DashBoard\") {\r\n      history.push(\"/dashboard/\" + menu);\r\n    } else {\r\n      history.push(\"/dashboard/main\");\r\n    }\r\n  };\r\n  render() { \r\n    return (\r\n      <div className=\"sideNavBar-container\">\r\n        <List component=\"nav\" className=\"sideNavBar-list\">\r\n          <ListItem\r\n            button\r\n            onClick={(e) => this.navigate(e, \"DashBoard\")}\r\n            className={clsx(\"sideNav-list-item\", {\r\n              \"sideNav-list-item-active\":\r\n                this.props.selectedMenu === \"DashBoard\",\r\n            })}\r\n          >\r\n            <ListItemIcon \r\n              className={clsx(\"list-item-icon\", {\r\n                \"list-item-icon-active\":\r\n                  this.props.selectedMenu === \"DashBoard\",\r\n              })}\r\n            >\r\n              <LaptopIcon className=\"list-icon\" />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"DashBoard\"\r\n              className={clsx(\"list-item-text\", {\r\n                \"sideNav-list-item-text-active\": this.props.sideNavOpen,\r\n              })}\r\n            />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={(e) => this.navigate(e, \"Mentor\")}\r\n            className={clsx(\"sideNav-list-item\", {\r\n              \"sideNav-list-item-active\": this.props.selectedMenu === \"Mentor\",\r\n            })}\r\n          >\r\n            <ListItemIcon\r\n              className={clsx(\"list-item-icon\", {\r\n                \"list-item-icon-active\": this.props.selectedMenu === \"Mentor\",\r\n              })}\r\n            >\r\n              <img src={mentor_icon} alt=\"mentor-icon\" className=\"list-icon\" />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Mentor\"\r\n              className={clsx(\"list-item-text\", {\r\n                \"sideNav-list-item-text-active\": this.props.sideNavOpen,\r\n              })}\r\n            />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={(e) => this.navigate(e, \"Student\")}\r\n            className={clsx(\"sideNav-list-item\", {\r\n              \"sideNav-list-item-active\": this.props.selectedMenu === \"Student\",\r\n            })}\r\n          >\r\n            <ListItemIcon\r\n              className={clsx(\"list-item-icon\", {\r\n                \"list-item-icon-active\": this.props.selectedMenu === \"Student\",\r\n              })}\r\n            >\r\n              <SchoolIcon className=\"list-icon\" />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Student\"\r\n              className={clsx(\"list-item-text\", {\r\n                \"sideNav-list-item-text-active\": this.props.sideNavOpen,\r\n              })}\r\n            />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            onClick={(e) => this.navigate(e, \"Course\")}\r\n            className={clsx(\"sideNav-list-item\", {\r\n              \"sideNav-list-item-active\": this.props.selectedMenu === \"Course\",\r\n            })}\r\n          >\r\n            <ListItemIcon\r\n              className={clsx(\"list-item-icon\", {\r\n                \"list-item-icon-active\": this.props.selectedMenu === \"Course\",\r\n              })}\r\n            >\r\n              <img src={cource_icon} className=\"icon-width-navbar\" />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary=\"Course\"\r\n              className={clsx(\"list-item-text\", {\r\n                \"sideNav-list-item-text-active\": this.props.sideNavOpen,\r\n              })}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidenavBar;\r\n","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\course\\Course.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\mainDashboard\\MainDashboard.jsx",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\adminDashboardDetails\\AdminDashboardDetails.jsx",["108"],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\services\\axios_service.js",[],"C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\perticularCourceDetails\\PerticularCourceDetails.jsx",["109"],"import React, { useState, useEffect } from \"react\";\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport adminServices from \"../../services/admin_service.js\";\r\nimport Loader from \"../lazyLoading/Loading.jsx\";\r\nimport personImg from \"../../assets/image/personImg.png\";\r\nimport \"./perticularCourceDetails.scss\";\r\n\r\nconst PerticularCourceDetails = (props) => {\r\n  const [courceMentors, setCourceMentors] = useState(null);\r\n  const [courceStudents, setCourceStudents] = useState(null);\r\n\r\n  useEffect(() => {\r\n    adminServices\r\n      .fetchAllStudents()\r\n      .then((responce) => {\r\n        console.log(responce);\r\n        setCourceStudents(\r\n          responce.data.filter((eachStudent) =>\r\n            eachStudent.assignCourcesId.includes(\r\n              props.perticularCource.courceID\r\n            )\r\n          )\r\n        );\r\n\r\n        adminServices\r\n          .fetchAllMentors()\r\n          .then((responce) => {\r\n            console.log(responce);\r\n            setCourceMentors(\r\n              responce.data.filter((eachMentor) =>\r\n                eachMentor.ableCource.includes(props.perticularCource.courceID)\r\n              )\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [props.perticularCource]);\r\n\r\n  if (\r\n    courceMentors !== undefined &&\r\n    courceMentors !== null &&\r\n    courceStudents !== undefined &&\r\n    courceStudents !== null\r\n  ) {\r\n    return (\r\n      <div className=\"perticular-cource\">\r\n        <div className=\"perticular-cource-header\">\r\n          <Typography\r\n            variant=\"caption\"\r\n            color=\"textSecondary\"\r\n            onClick={props.showDashboard}\r\n            className=\"go-to-dashboard\"\r\n          >\r\n            DashBoard\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"textPrimary\">\r\n            / {props.perticularCource.courceName}\r\n          </Typography>\r\n        </div>\r\n        <div className=\"perticular-cource-details\">\r\n          <div className=\"cource-mentors\">\r\n            <div className=\"cource-mentors-header\">\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                \"Mentors-{courceMentors.length}\r\n              </Typography>\r\n            </div>\r\n            <div className=\"all-mentors\">\r\n              {courceMentors.map((eachMentor) => (\r\n                <div key={eachMentor.mId} className=\"each-mentor\">\r\n                  <div className=\"each-mentor-action-button\">\r\n                    <IconButton className=\"mentor-delete\">\r\n                      <DeleteIcon\r\n                        fontSize=\"small\"\r\n                        color=\"disabled\"\r\n                        className=\"delete-icon\"\r\n                      />\r\n                    </IconButton>\r\n                  </div>\r\n                  <div className=\"each-mentor-picture\">\r\n                    <img\r\n                      src={personImg}\r\n                      alt=\"mentor\"\r\n                      className=\"each-mentor-img\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"each-mentor-details\">\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      className=\"each-mentor-id\"\r\n                    >\r\n                      {eachMentor.mId}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      color=\"textPrimary\"\r\n                      className=\"each-mentor-name\"\r\n                    >\r\n                      {eachMentor.mName}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"cource-students\">\r\n            <div className=\"cource-students-header\">\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                Students-{courceStudents.length}\r\n              </Typography>\r\n            </div>\r\n            <div className=\"all-student\">\r\n              {courceStudents.map((eachStudent) => (\r\n                <div key={eachStudent.sId} className=\"each-student\">\r\n                  <div className=\"each-student-name\">\r\n                    <Typography variant=\"body1\" color=\"textPrimary\">\r\n                      {eachStudent.sName}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n};\r\n\r\nexport default PerticularCourceDetails;\r\n","C:\\Users\\asus\\javascript\\LearningManagementSystem_React\\src\\component\\MentorFormDialog\\MentorDialog.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"118","line":10,"column":8,"nodeType":"116","messageId":"117","endLine":10,"endColumn":21},{"ruleId":"114","severity":1,"message":"119","line":66,"column":11,"nodeType":"116","messageId":"117","endLine":66,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":94,"column":58,"nodeType":"122","endLine":94,"endColumn":84},{"ruleId":"114","severity":1,"message":"115","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"123","line":16,"column":8,"nodeType":"116","messageId":"117","endLine":16,"endColumn":16},{"ruleId":"114","severity":1,"message":"124","line":188,"column":7,"nodeType":"116","messageId":"117","endLine":188,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":88,"column":15,"nodeType":"127","endLine":88,"endColumn":69},{"ruleId":"125","severity":1,"message":"126","line":17,"column":15,"nodeType":"127","endLine":17,"endColumn":63},{"ruleId":"114","severity":1,"message":"118","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":21},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'adminServices' is defined but never used.","'bull' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MenuItem' is defined but never used.","'useStyles' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]