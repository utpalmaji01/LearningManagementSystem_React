[{"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\index.js":"1","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\App.js":"2","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\reportWebVitals.js":"3","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\Routes.js":"4","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\ErrorBoundary.jsx":"5","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\PrivateRoute.jsx":"6","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\History.js":"7","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\logIn\\LogIn.jsx":"8","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\dashboard\\dashboard.jsx":"9","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\appBar\\Appbar.jsx":"10","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\sideNavBar\\SidenavBar.jsx":"11","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\mainDashboard\\MainDashboard.jsx":"12","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\course\\Course.jsx":"13","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\student\\Student.jsx":"14","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\mentor\\Mentor.jsx":"15","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\perticularCourceDetails\\PerticularCourceDetails.jsx":"16","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\MentorFormDialog\\MentorDialog.jsx":"17"},{"size":438,"mtime":1611731474858,"results":"18","hashOfConfig":"19"},{"size":263,"mtime":1611895906688,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1611731474859,"results":"21","hashOfConfig":"19"},{"size":1023,"mtime":1611902616092,"results":"22","hashOfConfig":"19"},{"size":613,"mtime":1611895906720,"results":"23","hashOfConfig":"19"},{"size":299,"mtime":1611895906720,"results":"24","hashOfConfig":"19"},{"size":86,"mtime":1611731474854,"results":"25","hashOfConfig":"19"},{"size":6506,"mtime":1611895906731,"results":"26","hashOfConfig":"19"},{"size":1357,"mtime":1611899410187,"results":"27","hashOfConfig":"19"},{"size":2565,"mtime":1611895906722,"results":"28","hashOfConfig":"19"},{"size":3456,"mtime":1611897193845,"results":"29","hashOfConfig":"19"},{"size":35030,"mtime":1611897193836,"results":"30","hashOfConfig":"19"},{"size":4085,"mtime":1611902616212,"results":"31","hashOfConfig":"19"},{"size":12443,"mtime":1611902616223,"results":"32","hashOfConfig":"19"},{"size":2772,"mtime":1611902638472,"results":"33","hashOfConfig":"19"},{"size":3273,"mtime":1611897193844,"results":"34","hashOfConfig":"19"},{"size":2608,"mtime":1611902616207,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"u43xit",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\index.js",[],["74","75"],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\App.js",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\reportWebVitals.js",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\Routes.js",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\ErrorBoundary.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\PrivateRoute.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\History.js",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\logIn\\LogIn.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\dashboard\\dashboard.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\appBar\\Appbar.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\sideNavBar\\SidenavBar.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\mainDashboard\\MainDashboard.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\course\\Course.jsx",[],"C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\student\\Student.jsx",["76","77","78"],"import React, { useState } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport \"./student.scss\";\r\nimport UploadIcon from \"../../assets/student-upload-icon.png\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst currencies = [\r\n  {\r\n    value: \"USD\",\r\n    label: \"$\",\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"€\",\r\n  },\r\n  {\r\n    value: \"BTC\",\r\n    label: \"฿\",\r\n  },\r\n  {\r\n    value: \"JPY\",\r\n    label: \"¥\",\r\n  },\r\n];\r\nconst mentors = [\r\n  {\r\n    value: \"USD\",\r\n    label: \"mentor1\",\r\n  },\r\n  {\r\n    value: \"EUR\",\r\n    label: \"mentor2\",\r\n  },\r\n  {\r\n    value: \"BTC\",\r\n    label: \"mentor3\",\r\n  },\r\n  {\r\n    value: \"JPY\",\r\n    label: \"mentor4\",\r\n  },\r\n];\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(\r\n  Student_ID,\r\n  Name,\r\n  Email_ID,\r\n  Mobile_No,\r\n  Course,\r\n  Mentor,\r\n  Current_score\r\n) {\r\n  return {\r\n    Student_ID,\r\n    Name,\r\n    Email_ID,\r\n    Mobile_No,\r\n    Course,\r\n    Mentor,\r\n    Current_score,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n  createData(\r\n    \"id17354\",\r\n    \"Abhds sdddaa\",\r\n    \"kkkasdk@gmail.com \",\r\n    12213546667,\r\n    \"courceABCD\",\r\n    \"mentor1\",\r\n    \"4.5/5\"\r\n  ),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nclass Student extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openDialog: false,\r\n      menu1: \"Java Full Stack\",\r\n      menu2: \"Mentor1\",\r\n      openUploadDialog: false,\r\n    };\r\n  }\r\n  handleChangemenu1 = (event) => {\r\n    this.setState({ menu1: event.target.value });\r\n  };\r\n  handleChangemenu2 = (event) => {\r\n    this.setState({ menu2: event.target.value });\r\n  };\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      openDialog: true,\r\n    });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({\r\n      openDialog: false,\r\n    });\r\n  };\r\n  handleClickOpenUpload = () => {\r\n    this.setState({\r\n      openUploadDialog: true,\r\n    });\r\n  };\r\n  handleCloseUpload = () => {\r\n    this.setState({\r\n      openUploadDialog: false,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"student-outer-container\">\r\n        <StylesProvider>\r\n          <Dialog\r\n            open={this.state.openDialog}\r\n            onClose={this.handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <div className=\"box-top-header\">Add Student</div>\r\n            <div className=\"box-content\">\r\n              {\" \"}\r\n              <form noValidate autoComplete=\"off\">\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Student id\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Email id\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-basic\"\r\n                    label=\"Mobile Number\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  {\" \"}\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-select-currency-native\"\r\n                    select\r\n                    label=\"Course\"\r\n                    value={this.state.menu1}\r\n                    size=\"small\"\r\n                    onChange={(e) => this.handleChangemenu1(e)}\r\n                    SelectProps={{\r\n                      native: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {currencies.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </TextField>\r\n                </div>\r\n                <div className=\"text-fields-student\">\r\n                  {\" \"}\r\n                  <TextField\r\n                    fullWidth\r\n                    id=\"outlined-select-currency-native\"\r\n                    select\r\n                    label=\"Mentor\"\r\n                    value={this.state.menu2}\r\n                    size=\"small\"\r\n                    onChange={(e) => this.handleChangemenu2(e)}\r\n                    SelectProps={{\r\n                      native: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    {mentors.map((option) => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </TextField>\r\n                </div>\r\n                <div className=\"student-buttton-container\">\r\n                  <div\r\n                    className=\"student-form-cancel-button\"\r\n                    onClick={this.handleClose}\r\n                  >\r\n                    Cancel\r\n                  </div>\r\n                  <div className=\"student-form-add-button\">Add</div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Dialog>\r\n          <Dialog\r\n            open={this.state.openUploadDialog}\r\n            onClose={this.handleCloseUpload}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <div className=\"outer-box-upload\">\r\n              <div className=\"upload-header-container\">\r\n                <div className=\"upload-box-header\">Upload Engineers Data</div>\r\n                <CloseIcon onClick={this.handleCloseUpload} style={{cursor: \"pointer\"}} />\r\n              </div>\r\n              <div className=\"inner-upload-container\">\r\n                <div>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"span\"\r\n                    >\r\n                      <CloudUploadIcon />\r\n                      Upload\r\n                    </Button>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Dialog>\r\n          <div className=\"header-student\">\r\n            <div className=\"header-student-text\">Student Details</div>\r\n            <div className=\"student-upload-button-container\">\r\n              <div\r\n                className=\"icon-image-container\"\r\n                onClick={this.handleClickOpenUpload}\r\n              >\r\n                <img className=\"icon-image\" src={UploadIcon} alt=\"\" />\r\n              </div>\r\n              <div\r\n                className=\"add-student-button\"\r\n                onClick={this.handleClickOpen}\r\n              >\r\n                Add Student\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <TableContainer component={Paper}>\r\n              <Table className=\"njn\" aria-label=\"customized table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <StyledTableCell>Student ID</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Name</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Email ID</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Mobile No.</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Course</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">Mentor</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">\r\n                      Current Score\r\n                    </StyledTableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows.map((row) => (\r\n                    <StyledTableRow key={row.name}>\r\n                      <StyledTableCell component=\"th\" scope=\"row\">\r\n                        {row.Student_ID}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">\r\n                        {row.Name}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">\r\n                        {row.Email_ID}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">\r\n                        {row.Mobile_No}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">\r\n                        {row.Course}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">\r\n                        {row.Mentor}\r\n                      </StyledTableCell>\r\n                      <StyledTableCell align=\"right\">\r\n                        {row.Current_score}\r\n                      </StyledTableCell>\r\n                    </StyledTableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </StylesProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Student;\r\n","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\mentor\\Mentor.jsx",["79","80","81","82"],"import React from 'react';\r\nimport './mentor.scss';\r\nimport { Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MentorDialog from '../MentorFormDialog/MentorDialog';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\n\r\nconst Mentor = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n\r\n    return (\r\n        <>\r\n        <div className=\"mentorContainer\" >\r\n            <div id=\"firstPart\" >\r\n                <p id=\"mentorPara\" >Mentor Details</p>\r\n                <Button variant=\"contained\" onClick={handleClickOpen} id=\"mentorBtn\" color=\"primary\">\r\n                    Add Mentor\r\n                 </Button>\r\n            </div>\r\n            <div id=\"cardContain\">\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <div id=\"displayArea\" >\r\n                    <div id=\"imageArea\" >\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </div>\r\n                    <div id=\"nameArea\" >\r\n                        <p id=\"mentorName\" >Mentor Name</p>\r\n                        <p id=\"mentorId\">Mentor Id</p>\r\n                        <p id=\"mentorMail\" >Mentor Mail</p>\r\n                    </div>\r\n                </div>\r\n                {/* <div id=\"borderDiv\" /> */}\r\n                <Divider className=\"divide\" />\r\n                <div id=\"content\" >\r\n                    <p id=\"cName\" >Course Name</p>\r\n                    <p id=\"nStud\" >No. of Students</p>\r\n                </div>\r\n                <div id=\"classContainer\" >\r\n                    <p id=\"course\" >Java Full Stack</p>\r\n                    <div id=\"studNumber\">\r\n                        <p id=\"studN\" >25</p>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n            </div>\r\n        </div>\r\n        <MentorDialog open={open} handleClickOpen={handleClickOpen} handleClose={handleClose} />\r\n        </>\r\n    )\r\n}\r\nexport default Mentor;\r\n","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\perticularCourceDetails\\PerticularCourceDetails.jsx",["83"],"import React, { useState, useEffect } from \"react\";\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport \"./perticularCourceDetails.scss\";\r\nconst PerticularCourceDetails = (props) => {\r\n  const [cource, setCource] = useState({});\r\n\r\n  useEffect(() => {\r\n    setCource(props.perticularCource);\r\n  }, [props.perticularCource]);\r\n\r\n  return (\r\n    <div className=\"perticular-cource\">\r\n      <div className=\"perticular-cource-header\">\r\n        <Typography\r\n          variant=\"caption\"\r\n          color=\"textSecondary\"\r\n          onClick={props.showDashboard}\r\n          className=\"go-to-dashboard\"\r\n        >\r\n          DashBoard\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"textPrimary\">\r\n          / {props.perticularCource.courceName}\r\n        </Typography>\r\n      </div>\r\n      <div className=\"perticular-cource-details\">\r\n        <div className=\"cource-mentors\">\r\n          <div className=\"cource-mentors-header\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              Mentors-{props.perticularCource.mentors.length}\r\n            </Typography>\r\n          </div>\r\n          <div className=\"all-mentors\">\r\n            {props.perticularCource.mentors.map((eachMentor) => (\r\n              <div key={eachMentor.mId} className=\"each-mentor\">\r\n                <div className=\"each-mentor-action-button\">\r\n                  <IconButton className=\"mentor-delete\">\r\n                    <DeleteIcon\r\n                      fontSize=\"small\"\r\n                      color=\"disabled\"\r\n                      className=\"delete-icon\"\r\n                    />\r\n                  </IconButton>\r\n                </div>\r\n                <div className=\"each-mentor-picture\"></div>\r\n                <div className=\"each-mentor-details\">\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    className=\"each-mentor-id\"\r\n                  >\r\n                    {eachMentor.mId.substring(0, 5)}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    color=\"textPrimary\"\r\n                    className=\"each-mentor-name\"\r\n                  >\r\n                    {eachMentor.mName}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"cource-students\">\r\n          <div className=\"cource-students-header\">\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              Students-{props.perticularCource.students.length}\r\n            </Typography>\r\n          </div>\r\n          <div className=\"all-student\">\r\n            {props.perticularCource.students.map((eachStudent) => (\r\n              <div key={eachStudent.sId} className=\"each-student\">\r\n                <div className=\"each-student-name\">\r\n                  <Typography variant=\"body1\" color=\"textPrimary\">\r\n                    {eachStudent.sName}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerticularCourceDetails;\r\n","C:\\Users\\KIIT\\Videos\\web\\LearningManagementSystem_React\\src\\component\\MentorFormDialog\\MentorDialog.jsx",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":16,"column":8,"nodeType":"90","messageId":"91","endLine":16,"endColumn":16},{"ruleId":"88","severity":1,"message":"93","line":188,"column":7,"nodeType":"90","messageId":"91","endLine":188,"endColumn":16},{"ruleId":"88","severity":1,"message":"94","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":19},{"ruleId":"88","severity":1,"message":"95","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":19},{"ruleId":"88","severity":1,"message":"96","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":18},{"ruleId":"88","severity":1,"message":"97","line":42,"column":11,"nodeType":"90","messageId":"91","endLine":42,"endColumn":15},{"ruleId":"88","severity":1,"message":"98","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":16},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'useStyles' is assigned a value but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'bull' is assigned a value but never used.","'cource' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]